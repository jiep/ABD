filename = "Air_Quality.csv"
data = read.csv(file = filename, sep = ",", header = TRUE)
View(data)
View(data)
data$name[1]
import csv
# Inicialización de variables
measure = 'Concentración media'
year = []
geo_entity = []
geo_type = []
data_value = []
with open('Air_Quality.csv', newline='') as csvfile:
airq_reader = csv.DictReader(csvfile)
for row in airq_reader:
# Asignación y conversión de variables
year.append(int(row['year_description']))
geo_entity.append(row['geo_entity_name'])
geo_type.append(row['geo_type_name'])
data_value.append(float(row['data_valuemessage']))
# Salir cuando acabemos con este indicador
if row['indicator_id'] != '646':
break
print(data_value)
library(dplyr)
install.packages(c("dplyr", "tidyr"))
library("dplyr")
library("tidyr")
library("dplyr")
library("tidyr")
filename = "Air_Quality.csv"
data_csv = read.csv(file = filename, sep = ",", header = TRUE)
selected_columns = select(data_csv, data_csv$year_description, data_csv$geo_entity_id, data_csv$geo_type_name, data_csv$data_valuemessage, data_csv$indicator_id)
selected_columns = select(data_csv, "data_csv$year_description", "data_csv$geo_entity_id", "data_csv$geo_type_name", "data_csv$data_valuemessage", "data_csv$indicator_id")
filename = "Air_Quality.csv"
data_csv = tbl_df(read.csv(file = filename, sep = ",", header = TRUE))
View(data_csv)
attach(data_csv)
selected_columns = select(data_csv, year_description, geo_entity_id, geo_type_name, data_valuemessage, indicator_id)
selected_columns
filter_columns = filter(indicator_id == 646)
filter_columns = filter(selected_columns, indicator_id == 646)
filter_columns
renamed_columns = rename(filtered_rows, year_description = "year")
filtered_rows = filter(selected_columns, indicator_id == 646)
renamed_columns = rename(filtered_rows, year_description = "year")
renamed_columns = rename(filtered_rows, year_description = year)
renamed_columns = rename(filtered_rows,  year= year_description)
renamed_columns
renamed_columns = rename(filtered_rows,  year= year_description,
geo_entity = geo_entity_id,
geo_type = geo_type_name,
data_value = data_valuemessage)
renamed_columns
tidy_data = select(renamed_columns, -indicator_id)
tidy_data
head(tidy_data)
data_value
tidy_data$data_value
quantile(data, 0.25)
quantile(data_valuemessage, 0.25)
min(data_valuemessage, 0.25)
sd(data_value)
data_value = tidy_data$data_value
sd(data_value)
median(data_value)
#cat("El mínimo es ", min(data_csv), "y el máximo es ", max(data_value))
cat("La media es ", mean(data_value), " y la media es ", median(data_value))
cat("La desviación típica es", sd(data_csv))
sd(data_csv)
cat("La desviación típica es", sd(data_value))
cat("El mínimo es", min(data_value), "y el máximo es", max(data_value))
cat("El primer cuartil es", quantile(data_value, 0.25)[[1]], "y el tercer cuartil es", quantile(data_value, 0.75)[[1]])
hist(data_value)
hist(data_value)
title_hist = "Concentración media de particulas de benceno en la ciudad de Nueva York"
ylabel_hist = "Frecuencia"
xlabel_hist = ""
hist(data_value, title = title_hist, xlabel = xlabel_hist, ylabel = ylabel_hist)
warnings()
title_hist = "Concentración media de particulas de benceno en la ciudad de Nueva York"
ylabel_hist = "Frecuencia"
xlabel_hist = ""
hist(data_value, title = title_hist, xlab = xlabel_hist, ylab = ylabel_hist)
title_hist = "Concentración media de particulas de benceno en la ciudad de Nueva York"
ylabel_hist = "Frecuencia"
xlabel_hist = ""
hist(data_value, main = title_hist, xlab = xlabel_hist, ylab = ylabel_hist)
hist(data_value,
main = title_hist,
xlab = xlabel_hist,
ylab = ylabel_hist,
col = red)
hist(data_value,
main = title_hist,
xlab = xlabel_hist,
ylab = ylabel_hist,
col = "red")
hist(data_value,
main = title_hist,
xlab = xlabel_hist,
ylab = ylabel_hist,
col = "blue",
sep = "1px")
hist(data_value,
main = title_hist,
xlab = xlabel_hist,
ylab = ylabel_hist,
col = "blue",
breaks = 5)
hist(data_value,
main = title_hist,
xlab = xlabel_hist,
ylab = ylabel_hist,
col = "blue",
breaks = 5)
hist(data_value,
main = title_hist,
xlab = xlabel_hist,
ylab = ylabel_hist,
col = "blue",
breaks = 50)
hist(data_value,
main = title_hist,
xlab = xlabel_hist,
ylab = ylabel_hist,
col = "blue",
breaks=)
hist(data_value,
main = title_hist,
xlab = xlabel_hist,
ylab = ylabel_hist,
col = "blue",
breaks= rep(1:max(data_value),each=2)+c(-.4,.4))
?hist
plot(density(data_value))
par(mfrow=c(1,2))
curve(dunif(x, a, b), from = a - 5, to = b + 5, main = "Función de densidad",
ylab = "Densidad", col = 2, lwd=3)
curve(punif(x, a, b), from = a - 5, to = b + 5, main = "Función de distribución",
ylab = "Probabilidad acumulada", col = 4, lwd=3)
a = density(data_value)
a
density = density(data_value)
plot(ecdf(data_value))
plot(ecdf(data_value), type = "l")
par(mfrow=c(1,2))
par(mfrow=c(1,1))
plot(density(data_value))
# Función de probabilidad
plot(ecdf(data_value), type = "l")
par(mfrow=c(1,1))
par(mfrow=c(1,2))
# Función de densidad
plot(density(data_value))
# Función de probabilidad
plot(ecdf(data_value))
par(mfrow=c(1,2))
# Función de densidad
title_density = "Función de densidad"
ylabel_density = "Densidad"
xlabel_density = ""
plot(density(data_value),
main = title_density,
xlab = xlabel_density,
yalb = ylabel_density)
# Función de probabilidad
title_cdf = "Función de probabilidad"
ylabel_cdf = "Frecuencia"
xlabel_cdf = ""
plot(ecdf(data_value),
main = title_cdf,
xlab = xlabel_cdf,
yalb = ylabel_cdf)
title_density = "Función de densidad"
ylabel_density = "Densidad"
xlabel_density = ""
plot(density(data_value),
main = title_density,
xlab = xlabel_density,
ylab = ylabel_density)
# Función de probabilidad
title_cdf = "Función de probabilidad"
ylabel_cdf = "Frecuencia"
xlabel_cdf = ""
plot(ecdf(data_value),
main = title_cdf,
xlab = xlabel_cdf,
ylab = ylabel_cdf)
a=select(data_csv,
year_description,
geo_entity_id,
geo_type_name,
data_valuemessage,
indicator_id) %>% filter(data_csv, indicator_id == 646) %>% rename(data_csv,  year= year_description,
geo_entity = geo_entity_id,
geo_type = geo_type_name,
data_value = data_valuemessage) %>% select(data_csv, -indicator_id)
a=data_csv %>% select(year_description,
geo_entity_id,
geo_type_name,
data_valuemessage,
indicator_id)
%>% filter(indicator_id == 646)
%>% rename(year= year_description,
geo_entity = geo_entity_id,
geo_type = geo_type_name,
data_value = data_valuemessage)
%>% select(-indicator_id)
a=data_csv %>% select(year_description,
geo_entity_id,
geo_type_name,
data_valuemessage,
indicator_id)
a=data_csv %>% select(year_description,
geo_entity_id,
geo_type_name,
data_valuemessage,
indicator_id)
%>% filter(indicator_id == 646)
a
a=data_csv %>%
select(year_description,
geo_entity_id,
geo_type_name,
data_valuemessage,
indicator_id) %>%
filter(indicator_id == 646)
a=data_csv %>%
select(year_description,
geo_entity_id,
geo_type_name,
data_valuemessage,
indicator_id) %>%
filter(indicator_id == 646)  %>%
rename(year= year_description,
geo_entity = geo_entity_id,
geo_type = geo_type_name,
data_value = data_valuemessage)
a=data_csv %>%
select(year_description,
geo_entity_id,
geo_type_name,
data_valuemessage,
indicator_id) %>%
filter(indicator_id == 646)  %>%
rename(year= year_description,
geo_entity = geo_entity_id,
geo_type = geo_type_name,
data_value = data_valuemessage) %>%
select(-indicator_id)
a
tidy_data2=data_csv %>%
select(year_description,
geo_entity_id,
geo_type_name,
data_valuemessage,
indicator_id) %>%
filter(indicator_id == 646)  %>%
rename(year= year_description,
geo_entity = geo_entity_id,
geo_type = geo_type_name,
data_value = data_valuemessage) %>%
select(-indicator_id)
dim(tidy_data2)
which(tidy_data != tidy_data2)
which(tidy_data == tidy_data2)
84*4
dim(tidy_data2)
48*4
sum(which(tidy_data != tidy_data2))
sum(which(tidy_data == tidy_data2))
which(tidy_data == tidy_data2)
tidy_data == tidy_data2
sum(tidy_data == tidy_data2)
